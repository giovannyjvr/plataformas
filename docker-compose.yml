version: '3.8'

services:

  ##############################################################################
  # 1) Auth Service (Spring Boot)
  ##############################################################################
  auth:
    build:
      context: "./api/exercise2-auth-service"
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    environment:
      # Esta variável deve bater com o application.properties do Auth:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8080:8080"
    networks:
      - monitoring
    # Se depender de outros serviços (Ex.: MySQL, produto, etc.), adicione aqui:
    # depends_on:
    #   - product

 

  ##############################################################################
  # 3) Prometheus (para coletar métricas)
  ##############################################################################
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring
    depends_on:
      - auth

  ##############################################################################
  # 4) Grafana (para exibir dashboards)
  ##############################################################################
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      # Caso queira configurar a Data Source “prometheus” automaticamente,
      # crie um arquivo YAML em ./grafana/provisioning/datasources/.
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge
